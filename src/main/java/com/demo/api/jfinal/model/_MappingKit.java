package com.demo.api.jfinal.model;

import com.jfinal.plugin.activerecord.ActiveRecordPlugin;

/**
 * Generated by JFinal, do not modify this file.
 * <pre>
 * Example:
 * public void configPlugin(Plugins me) {
 *     ActiveRecordPlugin arp = new ActiveRecordPlugin(...);
 *     _MappingKit.mapping(arp);
 *     me.add(arp);
 * }
 * </pre>
 */
public class _MappingKit {
	
	public static void mapping(ActiveRecordPlugin arp) {
		arp.addMapping("dic_bank", "id", DicBank.class);
		arp.addMapping("dic_dict", "id", DicDict.class);
		arp.addMapping("dic_formats", "id", DicFormats.class);
		arp.addMapping("dic_goods_type", "id", DicGoodsType.class);
		arp.addMapping("dic_home_module", "id", DicHomeModule.class);
		arp.addMapping("dic_loan_bank", "id", DicLoanBank.class);
		arp.addMapping("dic_paymethods", "id", DicPaymethods.class);
		arp.addMapping("dt_agreement_state", "id", DtAgreementState.class);
		arp.addMapping("dt_bank_scheduling", "id", DtBankScheduling.class);
		arp.addMapping("dt_building_acceptance", "id", DtBuildingAcceptance.class);
		arp.addMapping("dt_building_acceptance_task", "id", DtBuildingAcceptanceTask.class);
		// Composite Primary Key order: acceptance_id,task_id
		arp.addMapping("dt_building_acceptance_task_acceptance", "acceptance_id,task_id", DtBuildingAcceptanceTaskAcceptance.class);
		// Composite Primary Key order: project_id,task_id
		arp.addMapping("dt_building_acceptance_task_project", "project_id,task_id", DtBuildingAcceptanceTaskProject.class);
		arp.addMapping("dt_building_acceptor", "id", DtBuildingAcceptor.class);
		arp.addMapping("dt_building_reserved", "id", DtBuildingReserved.class);
		arp.addMapping("dt_contract_info", "id", DtContractInfo.class);
		arp.addMapping("dt_deedtax_results", "id", DtDeedtaxResults.class);
		arp.addMapping("dt_deedtax_return", "id", DtDeedtaxReturn.class);
		arp.addMapping("dt_detail_list", "id", DtDetailList.class);
		arp.addMapping("dt_detail_list_state", "id", DtDetailListState.class);
		// Composite Primary Key order: detail_list_id,goods_type_id
		arp.addMapping("dt_detail_list_type", "detail_list_id,goods_type_id", DtDetailListType.class);
		arp.addMapping("dt_duty", "id", DtDuty.class);
		arp.addMapping("dt_form_id", "id", DtFormId.class);
		arp.addMapping("dt_goods", "id", DtGoods.class);
		arp.addMapping("dt_house_car", "id", DtHouseCar.class);
		arp.addMapping("dt_house_cohabitation", "id", DtHouseCohabitation.class);
		arp.addMapping("dt_house_decorate", "id", DtHouseDecorate.class);
		arp.addMapping("dt_house_hobby", "id", DtHouseHobby.class);
		arp.addMapping("dt_house_personal_information", "id", DtHousePersonalInformation.class);
		arp.addMapping("dt_materials", "id", DtMaterials.class);
		arp.addMapping("dt_meta_value", "id", DtMetaValue.class);
		arp.addMapping("dt_mortgage_information", "id", DtMortgageInformation.class);
		arp.addMapping("dt_mortgage_information_update", "id", DtMortgageInformationUpdate.class);
		arp.addMapping("dt_need_upload", "id", DtNeedUpload.class);
		arp.addMapping("dt_property_owners", "id", DtPropertyOwners.class);
		arp.addMapping("dt_property_owners_update", "id", DtPropertyOwnersUpdate.class);
		arp.addMapping("dt_readme", "id", DtReadme.class);
		// Composite Primary Key order: file_id,readme_id
		arp.addMapping("dt_readme_files", "file_id,readme_id", DtReadmeFiles.class);
		arp.addMapping("dt_readme_stage", "id", DtReadmeStage.class);
		arp.addMapping("dt_record_operation", "id", DtRecordOperation.class);
		arp.addMapping("dt_scan_record", "id", DtScanRecord.class);
		arp.addMapping("dt_store_files", "id", DtStoreFiles.class);
		arp.addMapping("dt_user_feedback", "id", DtUserFeedback.class);
		arp.addMapping("dt_user_info", "id", DtUserInfo.class);
		// Composite Primary Key order: info_id,value_id
		arp.addMapping("dt_user_info_relate_value", "info_id,value_id", DtUserInfoRelateValue.class);
		arp.addMapping("dt_user_message", "id", DtUserMessage.class);
		arp.addMapping("sc_order", "id", ScOrder.class);
		arp.addMapping("syn_bank_operator", "id", SynBankOperator.class);
		arp.addMapping("syn_building_acceptance", "id", SynBuildingAcceptance.class);
		arp.addMapping("syn_building_acceptance_error", "id", SynBuildingAcceptanceError.class);
		arp.addMapping("syn_building_info", "id", SynBuildingInfo.class);
		arp.addMapping("syn_certificate_type", "id", SynCertificateType.class);
		arp.addMapping("syn_company", "id", SynCompany.class);
		// Composite Primary Key order: del_flag,id
		arp.addMapping("syn_order", "del_flag,id", SynOrder.class);
		arp.addMapping("syn_order_errorinfo", "id", SynOrderErrorinfo.class);
		arp.addMapping("syn_paid_money", "id", SynPaidMoney.class);
		arp.addMapping("syn_paymethods", "id", SynPaymethods.class);
		arp.addMapping("syn_project_stage", "id", SynProjectStage.class);
		arp.addMapping("syn_property_owners", "id", SynPropertyOwners.class);
		arp.addMapping("syn_services", "id", SynServices.class);
		arp.addMapping("sys_accounts", "id", SysAccounts.class);
		arp.addMapping("sys_login_log", "id", SysLoginLog.class);
		arp.addMapping("wx_step_record", "id", WxStepRecord.class);
	}
}

